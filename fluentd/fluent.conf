<source>
  type netflow
  tag netflow.event

  port 2055
</source>

<source>
  @type sflow
  tag sflow.event
</source>


<filter sflow.event>
  @type record_transformer
  tag ${tag}

  enable_ruby
  <record>
    ip_protocol ${record["header_decoded"]["_source"]["layers"]["ip"]["ip.proto"]}
    ip_size ${record["header_decoded"]["_source"]["layers"]["ip"]["ip.len"]}
    src_ip ${record["header_decoded"]["_source"]["layers"]["ip"]["ip.src"]}
    dst_ip ${record["header_decoded"]["_source"]["layers"]["ip"]["ip.dst"]}
  </record>
  remove_keys header_decoded
</filter>


<match netflow.event>
  @type elasticsearch
  host elasticsearch

  type_name netflow
  logstash_format true
  logstash_prefix netflow
</match>

<match sflow.event>
  @type copy
  <store>
  @type elasticsearch
  host elasticsearch

  type_name sflow
  logstash_format true
  logstash_prefix sflow
  </store>
</match>
